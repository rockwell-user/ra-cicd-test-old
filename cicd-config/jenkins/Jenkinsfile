pipeline {
    agent any
    
    environment {
        path_GitHub = 'C:\\Users\\ASYost\\source\\repos\\ra-cicd-test-old\\'
        acdFileName = 'CICD_test.ACD'
        DOTNET_VERSION = '6.0'
        DOTNET_INSTALL_DIR = 'C:\\Program Files\\dotnet'
    }

    stages {
        stage('Check .NET SDK') {
            steps {
                script {
                    def dotnetVersionInstalled = bat(
                        script: 'dotnet --version',
                        returnStdout: true
                    ).trim()

                    if (!dotnetVersionInstalled.startsWith(DOTNET_VERSION)) {
                        echo "Installing .NET SDK $DOTNET_VERSION..."
                        // Download and install .NET SDK 6.0 using curl
                        bat label: 'Install .NET SDK 6.0',
                            script: """
                                mkdir "$DOTNET_INSTALL_DIR"
                                cd "$DOTNET_INSTALL_DIR"
                                curl -o dotnet-install.ps1 -L https://dot.net/v1/dotnet-install.ps1
                                powershell -ExecutionPolicy Bypass -File .\\dotnet-install.ps1 -Channel 6.0 -InstallDir \"$DOTNET_INSTALL_DIR\" -NoPath
                            """
                    } else {
                        echo ".NET SDK $DOTNET_VERSION is already installed."
                    }
                }
            }
        }
        stage ('Build') {
            steps {
                echo 'Starting Build...'

                bat """
                    cd %path_GitHub%cicd-config\\stage-test\\stage-test-configuration\\LogixSDKDemoApp
                    dotnet build
                """
                
            }
        }
        stage('Test') {
            steps {
                echo 'Starting Test..'

                def testResult = sh(returnStdout: true, script: '%path_GitHub%cicd-config\\stage-test\\stage-test-configuration\\LogixSDKDemoApp\\bin\\Debug\\net6.0\\TestStage_CICDExample.exe %path_GitHub% %acdFileName%')
                echo "Output: ${testResult}"
            }
        }
        stage('Publish') {
            steps {
                echo 'Starting Publishing..'

                bat """
                    cd %path_GitHub%
                    git --version
                """
                
            }
        }

        stage('Deployment') {
            steps {
                echo 'Starting Deployment....'
            }
        }
    }
}
