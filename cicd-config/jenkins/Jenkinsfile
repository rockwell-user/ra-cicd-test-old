// def AGENT_LABEL = null

// node('main') {
//   stage('Checkout and set agent'){
//      checkout scm
//      ### Or just use any other approach to figure out agent label: read file, etc
//      if (env.BRANCH_NAME == 'main') {
//         AGENT_LABEL = "prod"
//      } else {
//         AGENT_LABEL = "dev"
//      }
//    }
// }

pipeline {
    agent none
    // agent any
    // agent { 
    //     node {
    //         label 'docker-agent-alpine'
    //         }
    //   }
    // triggers {
    //     pollSCM '* * * * *'
    // }
    // parameters {
    //     string(name: 'NAME', description: 'Rockwell Automation')
    //     text(name: 'DESC', description: 'This is an example CI/CD pipeline for Studio 5000 Logix Designer application development.')
    // }
    stages {
        stage ('Build') {
            // agent {
            //     dockerfile {
            //         dir './cicd-config/jenkins/Dockerfile_TestStage'
            //         label 'my-label'
            //     }
            // }
            agent { docker 'mcr.microsoft.com/windows/servercore:ltsc2019' }
            steps {
                echo "Starting Build..."

                // script {
                //     dir('/cicd-config/jenkins/'){
                //         script{
                //             checkout scm
                //             def dockerTestImage = docker.build("Dockerfile_TestStage:${env.BUILD_ID}")
                //             dockerTestImage.inside {
                //                 sh 'make test'
                //             }
                //         }
                //     }
                // }
                // sh '''
                // git --version
                // '''
                
                // git 'https://github.com/rockwell-user/ra-cicd-test-old.git'

                // script {
                //     def exitCode_1 = bat(returnStatus: true, script: 'dotnet build')
                //     if (exitCode_1 == 0) {
                //         echo 'Executable ran successfully'
                //     } else {
                //         error 'Executable failed to run'
                //     }
                // }
            }
        }
        stage('Test') {
            steps {
                echo "Starting Test.."
                // "${env.WORKSPACE}/JenkinsScripts/myScript.groovy"

                // script {
                //     def exitCode_2 = bat(returnStatus: true, script: 'cicd-config/stage-test/stage-test-configuration/LogixSDKDemoApp/bin/Debug/net6.0/TestStage_CICDExample.exe')
                //     if (exitCode_2 == 0) {
                //         echo 'Executable ran successfully'
                //     } else {
                //         error 'Executable failed to run'
                //     }
                // }
            }
        }
        stage('Publish') {
            steps {
                echo "Starting Publishing.."
            }
        }

        stage('Deliver') {
            steps {
                echo 'Starting Delivery....'
            }
        }
    }
}
